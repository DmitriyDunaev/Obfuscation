using System;
using System.Xml;
using System.Xml.Linq;
using System.Xml.Schema;

namespace XmlHelper 
{
	/// <summary>
	/// Base class for all exceptions thrown by functions of the Helper-library..
	/// </summary>
	public class HelperException : Exception 
	{
		public HelperException(string text) : base(text) 
		{
		}

		public HelperException(Exception other) : base("", other)
		{
		}

		public HelperException(string text, Exception other)
			: base(text, other)
		{
		}

		public string GetMessage() 
		{
			return Message;
		}

		public Exception GetInnerException() 
		{
			return InnerException;
		}
	}
	
	/// <summary>
	/// Exception that can be thrown by the user.
	/// </summary>
	public class UserException : HelperException
	{
		public UserException (string text) : base(text)
		{}
	}

	/// <summary>
	/// Interface to print TRACE and result output generated by the application.
	/// </summary>
	public interface TraceTarget 
	{
		void WriteTrace(string info);
	}

	/// <summary>
	/// Abstract class to be derived by the application for printing TRACE- and result-output generated by the application.
	/// </summary>
	public abstract class TraceProvider 
	{
		protected TraceTarget traceTarget = null;

		protected void WriteTrace(string info) 
		{
			if (traceTarget != null)
				traceTarget.WriteTrace(info);
		}

		public void RegisterTraceTarget(TraceTarget newTraceTarget) 
		{
			traceTarget = newTraceTarget;
		}

		public void UnregisterTraceTarget() 
		{
			traceTarget = null;
		}
	}


    public static class Validate
    {
        /// <summary>
        /// Validates an XML document against Exchange.xsd schema
        /// </summary>
        /// <param name="doc2validate">XML document to be validated</param>
        public static void AgainstScheme(XmlDocument doc2validate)
        {
            System.Xml.Schema.XmlSchemaSet schemas = new System.Xml.Schema.XmlSchemaSet();
            schemas.Add(null, System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory, @"Scheme\Exchange.xsd"));
            try
            {
                XDocument doc = XDocument.Parse(doc2validate.InnerXml);
                doc.Validate(schemas, (o, e) =>
                {
                    throw new Exception(e.Message);
                });
            }
            catch (Exception ex)
            {
                throw new Exception("XML could not be validated! It is not well-formed or does not comply with XSD.", ex);
            }
        }
    }
}